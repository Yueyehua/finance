{"repository_name":"github.com/Yueyehua/finance","body":"# Finance\n[![Build Status][travis-img]][travis-url]\n[![License][license-img]][license-url]\n[![Docs][docs-img]][docs-url]\n\nThis is a simple lib to apply financial formulas using Crystal-lang.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n```yaml\ndependencies:\n  finance:\n    github: Yueyehua/finance\n```\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"finance\"\n```\n\nAll functions are usable as is, i.e.:\n```crystal\nFinance::Loan.loan_schedule(1000, 0.02, 24)\n```\n\n## Development\n\nWIP\n\n## Contributing\n\n1. Fork it (<https://github.com/Yueyehua/finance/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Richard Delaplace](https://github.com/Yueyehua) - creator and maintainer\n\n[travis-img]: https://travis-ci.org/Yueyehua/finance.svg?branch=master\n[travis-url]: https://travis-ci.org/Yueyehua/finance\n[license-img]: https://img.shields.io/badge/License-MIT-blue.svg\n[license-url]: LICENSE\n[docs-img]: https://img.shields.io/readthedocs/docs.svg\n[docs-url]: https://yueyehua.github.io/finance/\n","program":{"html_id":"github.com/Yueyehua/finance/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/Yueyehua/finance","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Yueyehua/finance/Finance","path":"Finance.html","kind":"module","full_name":"Finance","name":"Finance","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"finance/loan.cr","line_number":1,"url":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/loan.cr"},{"filename":"finance/math.cr","line_number":1,"url":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/math.cr"},{"filename":"finance/saving.cr","line_number":1,"url":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/saving.cr"},{"filename":"finance/version.cr","line_number":2,"url":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/version.cr"},{"filename":"finance.cr","line_number":4,"url":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance.cr"}],"repository_name":"github.com/Yueyehua/finance","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"This is a collection of financial formulas.","summary":"<p>This is a collection of financial formulas.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Yueyehua/finance/Finance/Loan","path":"Finance/Loan.html","kind":"module","full_name":"Finance::Loan","name":"Loan","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"finance/loan.cr","line_number":3,"url":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/loan.cr"}],"repository_name":"github.com/Yueyehua/finance","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/Yueyehua/finance/Finance/Loan","kind":"module","full_name":"Finance::Loan","name":"Loan"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Yueyehua/finance/Finance","kind":"module","full_name":"Finance","name":"Finance"},"doc":"Collection of formulas used for a fixed rate redeemable loan.","summary":"<p>Collection of formulas used for a fixed rate redeemable loan.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"borrowing_cap(capacity:Float64,rate:Float64,duration:Int32)-instance-method","html_id":"borrowing_cap(capacity:Float64,rate:Float64,duration:Int32)-instance-method","name":"borrowing_cap","doc":"Returns the borrowing capacity given the monthly payment capacity,\nthe yearly rate and the duration of the loan in month.\n\n```\nFinance::Loan.borrowing_cap(1, 0.12, 12) # => 11.26\n```","summary":"<p>Returns the borrowing capacity given the monthly payment capacity, the yearly rate and the duration of the loan in month.</p>","abstract":false,"args":[{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Int32"}],"args_string":"(capacity : Float64, rate : Float64, duration : Int32)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/loan.cr#L12","def":{"name":"borrowing_cap","args":[{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"r = Finance::Math.periodic_rate(rate, 12)\n(capacity * ((1 - ((1 + r) ** (-(duration)))) / r)).round(2)\n"}},{"id":"loan_schedule(fund:Float64,rate:Float64,duration:Int32,date=Time.now)-instance-method","html_id":"loan_schedule(fund:Float64,rate:Float64,duration:Int32,date=Time.now)-instance-method","name":"loan_schedule","doc":"Returns the loan schedule given the fund borrowed, the yearly rate and\nthe duration of the loan in month.\n\n```\nFinance::Loan.loan_schedule(100, 0.12, 12)\n```","summary":"<p>Returns the loan schedule given the fund borrowed, the yearly rate and the duration of the loan in month.</p>","abstract":false,"args":[{"name":"fund","doc":null,"default_value":"","external_name":"fund","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Int32"},{"name":"date","doc":null,"default_value":"Time.now","external_name":"date","restriction":""}],"args_string":"(fund : Float64, rate : Float64, duration : Int32, date = <span class=\"t\">Time</span>.now)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/loan.cr#L23","def":{"name":"loan_schedule","args":[{"name":"fund","doc":null,"default_value":"","external_name":"fund","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Int32"},{"name":"date","doc":null,"default_value":"Time.now","external_name":"date","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"schedule = [{date, 0, 0, 0.0, 0.0, fund}]\ndue = monthly_payment(fund, rate, duration)\nduration.times do |i|\n  remainder = schedule.last.last\n  target_date = schedule.last.first + 1.month\n  line = schedule_line(remainder, rate, due, target_date, i, duration)\n  schedule.push(line)\nend\nschedule\n"}},{"id":"monthly_payment(fund:Float64,rate:Float64,duration:Int32)-instance-method","html_id":"monthly_payment(fund:Float64,rate:Float64,duration:Int32)-instance-method","name":"monthly_payment","doc":"Returns the monthly payment due given the fund borrowed, the yearly rate\nand the duration of the loan in month.\n\n```\nFinance::Loan.monthly_payment(100, 0.12, 12) # => 8.88\n```","summary":"<p>Returns the monthly payment due given the fund borrowed, the yearly rate and the duration of the loan in month.</p>","abstract":false,"args":[{"name":"fund","doc":null,"default_value":"","external_name":"fund","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Int32"}],"args_string":"(fund : Float64, rate : Float64, duration : Int32)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/loan.cr#L42","def":{"name":"monthly_payment","args":[{"name":"fund","doc":null,"default_value":"","external_name":"fund","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"r = Finance::Math.periodic_rate(rate, 12)\n(fund * (r / (1 - ((1 + r) ** (-(duration)))))).round(2)\n"}},{"id":"total_cost(fund:Float64,rate:Float64,duration:Int32)-instance-method","html_id":"total_cost(fund:Float64,rate:Float64,duration:Int32)-instance-method","name":"total_cost","doc":"Returns the total cost of the loan, i.e. the sum of all the monthly\ninterests given the fund borrowed, the yearly rate and the duration\nof the loan in month.\n\n```\nFinance::Loan.total_cost(100, 0.12, 12) # => 6.56\n```","summary":"<p>Returns the total cost of the loan, i.e.</p>","abstract":false,"args":[{"name":"fund","doc":null,"default_value":"","external_name":"fund","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Int32"}],"args_string":"(fund : Float64, rate : Float64, duration : Int32)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/loan.cr#L54","def":{"name":"total_cost","args":[{"name":"fund","doc":null,"default_value":"","external_name":"fund","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"mp = monthly_payment(fund, rate, duration)\n((mp * duration) - fund).round(2)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Yueyehua/finance/Finance/Math","path":"Finance/Math.html","kind":"module","full_name":"Finance::Math","name":"Math","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"finance/math.cr","line_number":3,"url":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/math.cr"}],"repository_name":"github.com/Yueyehua/finance","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/Yueyehua/finance/Finance/Math","kind":"module","full_name":"Finance::Math","name":"Math"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Yueyehua/finance/Finance","kind":"module","full_name":"Finance","name":"Finance"},"doc":"Collection of specific mathemathical functions.","summary":"<p>Collection of specific mathemathical functions.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"nthrt(n:Int32,value:Float64,precision=1e-10)-instance-method","html_id":"nthrt(n:Int32,value:Float64,precision=1e-10)-instance-method","name":"nthrt","doc":"Returns the Nth root of value.\n\n```\nFinance::Math.nthrt(4, 16) # => 2.0\n```","summary":"<p>Returns the Nth root of value.</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"},{"name":"precision","doc":null,"default_value":"1e-10","external_name":"precision","restriction":""}],"args_string":"(n : Int32, value : Float64, precision = <span class=\"n\">1e-10</span>)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/math.cr#L11","def":{"name":"nthrt","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"},{"name":"precision","doc":null,"default_value":"1e-10","external_name":"precision","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = value\nloop do\n  prev = x\n  x = (((n - 1) * prev) + (value / (prev ** (n - 1)))) / n\n  if (prev - x).abs > precision\n  else\n    break\n  end\nend\nx\n"}},{"id":"periodic_compound_rate(rate:Float64,periods:Int32)-instance-method","html_id":"periodic_compound_rate(rate:Float64,periods:Int32)-instance-method","name":"periodic_compound_rate","doc":"Returns the periodic compound rate given the yearly rate.\n\n```\nFinance::Math.periodic_compound_rate(0.12, 12) # => 0.009488792934582824\n```","summary":"<p>Returns the periodic compound rate given the yearly rate.</p>","abstract":false,"args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"periods","doc":null,"default_value":"","external_name":"periods","restriction":"Int32"}],"args_string":"(rate : Float64, periods : Int32)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/math.cr#L36","def":{"name":"periodic_compound_rate","args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"periods","doc":null,"default_value":"","external_name":"periods","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(nthrt(periods, 1.0 + rate)) - 1"}},{"id":"periodic_interests(capital:Float64,periodic_rate:Float64)-instance-method","html_id":"periodic_interests(capital:Float64,periodic_rate:Float64)-instance-method","name":"periodic_interests","doc":"Returns the periodic interests due given the remainder and\nthe periodic rate.\n\n```\nFinance::Math.periodic_interests(100, 0.01) # => 1.0\n```","summary":"<p>Returns the periodic interests due given the remainder and the periodic rate.</p>","abstract":false,"args":[{"name":"capital","doc":null,"default_value":"","external_name":"capital","restriction":"Float64"},{"name":"periodic_rate","doc":null,"default_value":"","external_name":"periodic_rate","restriction":"Float64"}],"args_string":"(capital : Float64, periodic_rate : Float64)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/math.cr#L27","def":{"name":"periodic_interests","args":[{"name":"capital","doc":null,"default_value":"","external_name":"capital","restriction":"Float64"},{"name":"periodic_rate","doc":null,"default_value":"","external_name":"periodic_rate","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(capital * periodic_rate).round(2)"}},{"id":"periodic_rate(rate:Float64,periods:Int32)-instance-method","html_id":"periodic_rate(rate:Float64,periods:Int32)-instance-method","name":"periodic_rate","doc":"Returns the periodic rate given the yearly rate.\n\n```\nFinance::Math.periodic_rate(0.12, 12) # => 0.01\n```","summary":"<p>Returns the periodic rate given the yearly rate.</p>","abstract":false,"args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"periods","doc":null,"default_value":"","external_name":"periods","restriction":"Int32"}],"args_string":"(rate : Float64, periods : Int32)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/math.cr#L45","def":{"name":"periodic_rate","args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"periods","doc":null,"default_value":"","external_name":"periods","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rate / periods"}}],"macros":[],"types":[]},{"html_id":"github.com/Yueyehua/finance/Finance/Saving","path":"Finance/Saving.html","kind":"module","full_name":"Finance::Saving","name":"Saving","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"finance/saving.cr","line_number":3,"url":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/saving.cr"}],"repository_name":"github.com/Yueyehua/finance","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/Yueyehua/finance/Finance/Saving","kind":"module","full_name":"Finance::Saving","name":"Saving"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Yueyehua/finance/Finance","kind":"module","full_name":"Finance","name":"Finance"},"doc":"Collection of formulas used for a fixed rate saving.","summary":"<p>Collection of formulas used for a fixed rate saving.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"savings_for_n_years(amount:Float64,rate:Float64,duration:Int32)-instance-method","html_id":"savings_for_n_years(amount:Float64,rate:Float64,duration:Int32)-instance-method","name":"savings_for_n_years","doc":"Returns the total savings given a fixed amount of savings per month,\na yearly rate and the duration in years.\n\n```\nFinance::Saving.savings_for_n_years(100.0, 0.05, 2) # => 2526.13\n```","summary":"<p>Returns the total savings given a fixed amount of savings per month, a yearly rate and the duration in years.</p>","abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Int32"}],"args_string":"(amount : Float64, rate : Float64, duration : Int32)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/saving.cr#L36","def":{"name":"savings_for_n_years","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"power = (duration * 12) + 1\nratio = 1 + (Finance::Math.periodic_compound_rate(rate, 12))\n(amount * (((1 - (ratio ** (power))) / (1 - ratio)) - 1)).round(2)\n"}},{"id":"savings_for_one_year(amount:Float64,rate:Float64)-instance-method","html_id":"savings_for_one_year(amount:Float64,rate:Float64)-instance-method","name":"savings_for_one_year","doc":"Returns the total savings of a year given a fixed amount of savings\nper month and a yearly rate.\n\n```\nFinance::Saving.savings_for_one_year(100.0, 0.05) # => 1232.26\n```","summary":"<p>Returns the total savings of a year given a fixed amount of savings per month and a yearly rate.</p>","abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"}],"args_string":"(amount : Float64, rate : Float64)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/saving.cr#L26","def":{"name":"savings_for_one_year","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"savings_for_n_years(amount, rate, 1)"}},{"id":"yearly_interests(capital:Float64,rate:Float64,monthly_savings=0.0)-instance-method","html_id":"yearly_interests(capital:Float64,rate:Float64,monthly_savings=0.0)-instance-method","name":"yearly_interests","doc":"Returns the total interests for a single year given an existing capital,\na yearly rate and a fixed amount of savings per month.\n\n```\nFinance::Saving.yearly_interests(100.0, 0.05, 100.0) # => 37.26\n```","summary":"<p>Returns the total interests for a single year given an existing capital, a yearly rate and a fixed amount of savings per month.</p>","abstract":false,"args":[{"name":"capital","doc":null,"default_value":"","external_name":"capital","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"monthly_savings","doc":null,"default_value":"0.0","external_name":"monthly_savings","restriction":""}],"args_string":"(capital : Float64, rate : Float64, monthly_savings = <span class=\"n\">0.0</span>)","source_link":"https://github.com/Yueyehua/finance/blob/4b3f285fc966721934e87832f8a234b6f1a89957/src/finance/saving.cr#L12","def":{"name":"yearly_interests","args":[{"name":"capital","doc":null,"default_value":"","external_name":"capital","restriction":"Float64"},{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"},{"name":"monthly_savings","doc":null,"default_value":"0.0","external_name":"monthly_savings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"invested = monthly_savings * 12\ntotal_savings = savings_for_one_year(monthly_savings, rate)\nnew_invests_interests = total_savings - invested\n((capital * rate) + new_invests_interests).round(2)\n"}}],"macros":[],"types":[]}]}]}}